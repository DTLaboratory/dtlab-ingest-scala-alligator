openapi: 3.0.0
info:
  title: dtlab ingest alligator
  version: '1.0'
  contact:
    name: navicore
    email: ed@onextent.com
  license:
    name: MIT
    url: 'https://github.com/SoMind/dtlab-ingest-scala-alligator/blob/master/LICENSE'
  description: |-
    Manage DtLab Telemetry Ingest Service.

    DtLab Ingest is a streaming service that feeds the DtLab actor system updates from the field.

    Original data sources will not transmit observations in the terse native format of the DtLab actors.  Usually observations are sent from external systems as collections of information in hierarchical complex messages.  It is the responsibility of preprocessing systems like dtlab-ingest to decompose complex verbose noisy inputs into the normalized timeseries observations meaningful to the DTs.
servers:
  - url: 'http://localhost:8082'
    description: dev local mode
paths:
  '/dtlab-ingest-alligator/extractor/telemetry/{specId}':
    parameters:
      - schema:
          type: string
        name: specId
        in: path
        required: true
        description: name for the spec directing telemetry from a data source to a list of actors
    post:
      summary: create telemetry extraction spec
      tags:
        - tell
      responses:
        '201':
          description: A copy of the successfully created spec definition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TelemetryExtractorSpec'
              examples:
                example-1:
                  value:
                    children:
                      - alternator_module
                      - starter_module
                    created: '2020-07-26T18:09:06.592Z'
                    name: machinery66
                    props:
                      - temp
                      - speed
        '401':
          description: Unauthorized
        '409':
          description: Conflict - you must delete the previous entry before creating a type of the same name.
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: post-dtlab-ingest-alligator-extractor-telemetry-spec
      description: Create a new spec with that defines how to identifiy the actors to update and the telemetry to extract.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TelemetryExtractorSpec'
            examples:
              example-1:
                value:
                  - created: '2020-08-24T16:18:30.001Z'
                    datetimeFmt: 'yyyy-MMM-dd hh:mm'
                    datetimePath: '$.close_approach_data[0].close_approach_date_full'
                    paths:
                      - - name: orbiting_body
                          path: '$.close_approach_data[0].orbiting_body'
                          valueType: String
                        - name: object
                          path: $.neo_reference_id
                          valueType: String
                    specId: neo1
                    values:
                      - idx: 0
                        path: $.absolute_magnitude_h
                        valueType: Double
                      - idx: 1
                        path: $.estimated_diameter.meters.estimated_diameter_min
                        valueType: Double
                      - idx: 2
                        path: $.estimated_diameter.meters.estimated_diameter_max
                        valueType: Double
        description: The array of telemetry extraction specs associated with this specId.
    get:
      summary: get telemetry extraction spec
      tags:
        - ask
      responses:
        '200':
          description: Definition of the telemetry extraction spec.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TelemetryExtractorSpec'
              examples:
                example-1:
                  value:
                    - specId: neo1
                      created: '2020-08-23T21:39:14.291Z'
                      datetimeFmt: 'yyyy-MMM-dd hh:mm'
                      datetimePath: '$.close_approach_data[0].close_approach_date_full'
                      paths:
                        - - name: orbiting_body
                            path: '$.close_approach_data[0].orbiting_body'
                            valueType: String
                          - name: object
                            path: $.neo_reference_id
                            valueType: String
                      values:
                        - idx: 0
                          path: $.absolute_magnitude_h
                          valueType: Double
                        - idx: 1
                          path: $.estimated_diameter.meters.estimated_diameter_min
                          valueType: Double
                        - idx: 2
                          path: $.estimated_diameter.meters.estimated_diameter_max
                          valueType: Double
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: get-dtlab-ingest-alligator-extractor-telemetry-spec
      description: Look up a telemetry extraction spec by ID.
    delete:
      summary: delete telemetry extraction spec
      tags:
        - tell
      operationId: delete-dtlab-ingest-alligator-extractor-telemetry-spec
      responses:
        '202':
          description: Accepted
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: Delete the spec.
  '/dtlab-ingest-alligator/extractor/object/{specId}':
    get:
      summary: get object extractor spec
      tags:
        - ask
      responses: {}
      operationId: get-dtlab-ingest-alligator-extractor-object-spec
      description: Instructions for extracting an array of telemetry from a single batch of telemetry packaged in a single json object.
    parameters:
      - schema:
          type: string
        name: specId
        in: path
        description: Name of the spec that extracts batches of incoming collections of observations into per-actor groups of observations.
        required: true
    delete:
      summary: delete object extractor spec
      tags:
        - tell
      operationId: delete-dtlab-ingest-alligator-extractor-object-spec
      responses:
        '202':
          description: Accepted
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: delete the object extraction spec
    post:
      summary: create object extractor spec
      tags:
        - tell
      operationId: post-dtlab-ingest-alligator-extractor-object-spec
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectExtractorSpec'
              examples:
                example-1:
                  value:
                    created: '2020-08-24T17:32:34.766Z'
                    path: '$.near_earth_objects.*[*]'
                    specId: neo1
                    telSpecId: neo1
        '401':
          description: Unauthorized
        '409':
          description: Conflict
      description: Create object extraction spec.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectExtractorSpec'
            examples:
              example-1:
                value:
                  path: '$.near_earth_objects.*[*]'
                  telSpecId: neo1
  '/dtlab-alligator/ingest/array/{specId}':
    parameters:
      - schema:
          type: string
        name: specId
        in: path
        required: true
    post:
      summary: Post a collection of observations - usually a timeseries - to be decomposed into individual observations and sent to actors.
      tags:
        - tell
      operationId: post-dtlab-alligator-ingest-array-specId
      responses:
        '202':
          description: Accepted
        '401':
          description: Unauthorized
        '406':
          description: Not Acceptable
      description: Load an array of telemetry to DtLab.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
          application/font-woff:
            schema:
              type: object
              properties: {}
  '/dtlab-alligator/ingest/telemetry/{specId}':
    parameters:
      - schema:
          type: string
        name: specId
        in: path
        required: true
    post:
      summary: Post input in raw form to be decomposed into a set of observations for a DT - usually a single json doc with a collection of readings related to a single device at a single point in time.
      tags:
        - tell
      operationId: post-dtlab-alligator-ingest-telemetry-spec
      responses:
        '202':
          description: Accepted
        '401':
          description: Unauthorized
        '406':
          description: Not Acceptable
      description: send a single document to the telemetry extractor for a single set of telemetry forwarded to actor(s)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
        description: observations in their raw form
components:
  schemas:
    TelemetryExtractorSpec:
      title: TelemetryExtractorSpec
      type: object
      x-examples:
        example-1: {}
      properties:
        specId:
          type: string
        paths:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/PathSpec'
        values:
          type: array
          items:
            $ref: '#/components/schemas/ValueSpec'
        datetimePath:
          type: string
        datetimeFmt:
          type: string
        created:
          type: string
    PathSpec:
      title: PathSpec
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        valueType:
          type: string
    ValueSpec:
      title: ValueSpec
      type: object
      properties:
        idx:
          type: integer
        path:
          type: string
        valueSpec:
          type: string
    ObjectExtractorSpec:
      title: ObjectExtractorSpec
      type: object
      properties:
        specId:
          type: string
        path:
          type: string
        telSpecId:
          type: string
        created:
          type: string
    Telemetry:
      title: Telemetry
      type: object
      properties:
        idx:
          type: string
        value:
          type: number
        datetime:
          type: string
tags:
  - name: ask
  - name: tell
